[
  {
    "name": "auth",
    "comment": "认证模块",
    "remarks": "\n\n## 模块概述\n认证模块(auth)负责用户注册、登录、会话管理和安全控制，采用DDD架构实现，包含用户聚合根、会话实体、值对象和领域事件等核心组件。\n\n## 核心组件\n\n### 1. 用户聚合根(User)\n- **属性**: \n  - 基础信息: username, email, passwordHash\n  - 安全状态: status, failedLoginAttempts\n  - 时间戳: createdAt, lastLoginAt\n  - 值对象: phone(Phone值对象)\n- **领域方法**: \n  - `register()`: 用户注册逻辑\n  - `verifyPassword()`: 密码验证\n  - `createSession()`: 创建登录会话\n  - 安全控制方法: incrementFailedAttempts(), resetFailedAttempts()\n\n### 2. 登录会话实体(LoginSession)\n- **存储策略**: Redis优先\n- **核心属性**: \n  - token: 会话唯一标识\n  - expiresAt: 过期时间\n  - deviceType: 设备类型\n  - ipAddress: 客户端IP\n- **Redis存储结构**:\n  ```bash\n  HSET session:{token} \n    userId \\\"user-001\\\"\n    username \\\"john_doe\\\"\n    deviceType \\\"IOS\\\"\n    ipAddress \\\"192.168.1.1\\\"\n    createdAt \\\"2023-08-15T12:00:00Z\\\"\n    expiresAt \\\"2023-08-15T13:00:00Z\\\"\n  EXPIRE session:{token} 3600\n  ```\n\n### 3. 值对象\n- **Phone**: 国家代码(countryCode) + 号码(number)\n- **DeviceInfo**: 设备类型(deviceType) + 系统版本(osVersion) + 浏览器(browserType) + 设备指纹(deviceFingerprint)\n\n### 4. 领域事件\n1. **UserRegisteredEvent**: 用户注册时触发\n   - 字段: userId, username, email, registeredAt\n2. **UserLoggedInEvent**: 登录成功时触发\n   - 字段: userId, loginTime, deviceType\n3. **SessionCreatedEvent**: 会话创建时触发\n   - 字段: token, deviceType, ipAddress, createdAt, expiresAt\n\n## 应用服务\n\n### AuthApplicationService接口\n```java\npublic interface AuthApplicationService {\n    void registerUser(String username, String email, String password);\n    String login(String username, String password, String deviceType, String ipAddress);\n    void logout(String sessionToken);\n}\n```\n\n### 关键业务流程\n1. **注册流程**:\n   - 密码哈希处理\n   - 发布UserRegisteredEvent\n2. **登录流程**:\n   ```mermaid\n   sequenceDiagram\n      用户->>+应用服务: 提交凭证\n      应用服务->>+用户聚合: 验证密码\n      用户聚合-->>-应用服务: 验证结果\n      应用服务->>+用户聚合: 创建会话\n      用户聚合-->>-应用服务: 返回token\n      应用服务->>Redis: 存储会话数据\n      应用服务->>事件总线: 发布UserLoggedInEvent\n      应用服务-->>用户: 返回JWT令牌\n   ```\n\n## 会话存储方案\n\n### Redis存储优势\n- ⚡ 微秒级响应速度\n- ⏱\uFE0F 原生TTL自动过期\n- \uD83C\uDF10 分布式会话支持\n- \uD83D\uDCCA 丰富数据结构\n\n### 混合存储策略\n| 数据类型       | 存储位置    | 原因                     |\n|----------------|-------------|--------------------------|\n| 会话令牌       | Redis       | 高频访问，需要低延迟     |\n| 会话创建记录   | 数据库      | 审计要求，长期保存       |\n| 用户聚合根     | 数据库      | 业务核心数据，强一致性   |\n\n### 会话验证流程\n```java\n@Aspect\npublic class SessionValidationAspect {\n    @Around(\"@annotation(RequiresAuth)\")\n    public Object validate(ProceedingJoinPoint jp) {\n        String token = extractToken(request);\n        Map<Object, Object> session = redisService.getSession(token);\n        \n        if (session == null) {\n            throw new AuthenticationException(\"无效会话\");\n        }\n        \n        SessionContext.set(session);\n        try {\n            return jp.proceed();\n        } finally {\n            SessionContext.clear();\n        }\n    }\n}\n```\n\n## 手动创建类\n\n### 1. 命令对象\n```java\n// RegisterUserCommand.java\npublic class RegisterUserCommand {\n    private String username;\n    private String email;\n    private String password;\n    // 构造方法/getters\n}\n```\n\n### 2. 响应对象\n```java\n// LoginResponse.java\npublic class LoginResponse {\n    private String accessToken;\n    private String refreshToken;\n    private String sessionToken;\n    // 构造方法/getters\n}\n```\n\n### 3. 安全组件\n```java\n// JwtTokenProvider.java\npublic class JwtTokenProvider {\n    public String createToken(String userId) { /*...*/ }\n    public boolean validateToken(String token) { /*...*/ }\n}\n```\n\n## 文件结构\n```\nsrc/main/java/com/example/auth/\n├── domain/\n│   ├── User.java                  # 聚合根\n│   ├── UserId.java                # 聚合根ID\n│   ├── Phone.java                 # 值对象\n│   ├── DeviceInfo.java            # 值对象\n│   └── event/                     # 领域事件\n│       ├── UserRegisteredEvent.java\n│       ├── UserLoggedInEvent.java\n│       └── SessionCreatedEvent.java\n├── application/\n│   ├── AuthApplicationService.java\n│   ├── AuthApplicationServiceImpl.java\n│   ├── command/                   # 手动创建\n│   │   └── RegisterUserCommand.java\n│   ├── dto/                       # 手动创建\n│   │   └── LoginResponse.java\n│   └── aspect/                    # 切面\n│       └── SessionValidationAspect.java\n└── infrastructure/\n    ├── repository/                # 仓储\n    │   ├── UserRepository.java\n    │   └── UserRepositoryImpl.java\n    ├── session/                   # Redis会话\n    │   ├── RedisSessionService.java\n    │   └── SessionContext.java\n    └── security/                  # 安全组件\n        ├── JwtTokenProvider.java\n        └── PasswordEncoder.java\n```\n\n## 性能优化\n1. **Lua脚本原子操作**\n   ```lua\n   if redis.call('exists', KEYS[1]) == 1 then\n       redis.call('expire', KEYS[1], ARGV[1])\n       return 1\n   end\n   return 0\n   ```\n   \n2. **会话分片策略**\n   ```java\n   // 基于用户ID哈希分片\n   int shard = userId.hashCode() % SHARD_COUNT;\n   String key = \"sessions:\" + shard + \":\" + token;\n   ```\n\n3. **二级缓存**\n   ```mermaid\n   graph LR\n     A[应用] --> B[本地Caffeine缓存] --> C[Redis集群]\n     B -->|缓存失效| D[数据库审计表]\n   ```\n\n## 安全控制\n1. **密码安全**\n   - BCrypt哈希存储\n   - 盐值加密\n2. **会话保护**\n   - JWT签名验证\n   - 短期访问令牌(30min)\n   - 长期刷新令牌(7天)\n3. **暴力破解防护**\n   - 失败计数器锁定\n   - IP频率限制\n   - 人机验证\n\n> 本设计遵循AggregateX框架规范，自动生成代码仅使用基本类型和模块内定义类型，自定义对象通过手动创建实现DDD完整架构。",
    "aggregateRoots": [
      {
        "name": "User",
        "comment": "用户聚合根",
        "properties": [
          {
            "name": "username",
            "comment": "用户名",
            "type": "REGULAR"
          },
          {
            "name": "email",
            "comment": "邮箱",
            "type": "REGULAR"
          },
          {
            "name": "passwordHash",
            "comment": "密码哈希值",
            "type": "REGULAR"
          },
          {
            "name": "status",
            "comment": "账号状态（ACTIVE, LOCKED）",
            "type": "REGULAR"
          },
          {
            "name": "phone",
            "comment": "手机号",
            "type": "AGGREGATE_ROOT_PROPERTY"
          },
          {
            "name": "createdAt",
            "comment": "创建时间",
            "type": "REGULAR"
          },
          {
            "name": "lastLoginAt",
            "comment": "最后登录时间",
            "type": "REGULAR"
          },
          {
            "name": "failedLoginAttempts",
            "comment": "连续登录失败次数",
            "type": "REGULAR"
          }
        ],
        "entities": [
          {
            "name": "LoginSession",
            "comment": "登录会话",
            "properties": [
              {
                "name": "sessionToken",
                "comment": "会话令牌",
                "type": "REGULAR"
              },
              {
                "name": "loginTime",
                "comment": "登录时间",
                "type": "REGULAR"
              },
              {
                "name": "ipAddress",
                "comment": "IP地址",
                "type": "REGULAR"
              },
              {
                "name": "deviceInfo",
                "comment": "设备信息",
                "type": "VALUE_OBJECT_PROPERTY"
              },
              {
                "name": "expiresAt",
                "comment": "过期时间",
                "type": "REGULAR"
              }
            ]
          }
        ],
        "valueObjects": [
          {
            "name": "Phone",
            "comment": "手机号值对象",
            "properties": [
              {
                "name": "countryCode",
                "comment": "国家代码",
                "type": "REGULAR"
              },
              {
                "name": "number",
                "comment": "手机号码",
                "type": "REGULAR"
              }
            ]
          },
          {
            "name": "DeviceInfo",
            "comment": "设备信息值对象",
            "properties": [
              {
                "name": "deviceType",
                "comment": "设备类型（WEB, ANDROID, IOS）",
                "type": "REGULAR"
              },
              {
                "name": "osVersion",
                "comment": "操作系统版本",
                "type": "REGULAR"
              },
              {
                "name": "browserType",
                "comment": "浏览器类型",
                "type": "REGULAR"
              },
              {
                "name": "deviceFingerprint",
                "comment": "设备指纹",
                "type": "REGULAR"
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "register",
            "comment": "注册用户",
            "returnType": "void",
            "parameters": [
              {
                "name": "password",
                "type": "String",
                "comment": "密码"
              }
            ]
          },
          {
            "name": "verifyPassword",
            "comment": "验证密码",
            "returnType": "boolean",
            "parameters": [
              {
                "name": "password",
                "type": "String",
                "comment": "待验证密码"
              }
            ]
          },
          {
            "name": "createSession",
            "comment": "创建登录会话",
            "returnType": "String",
            // 返回会话令牌
            "parameters": [
              {
                "name": "deviceType",
                "type": "String",
                "comment": "设备类型"
              },
              {
                "name": "ipAddress",
                "type": "String",
                "comment": "IP地址"
              }
            ]
          },
          {
            "name": "incrementFailedAttempts",
            "comment": "增加登录失败次数",
            "returnType": "void",
            "parameters": []
          },
          {
            "name": "resetFailedAttempts",
            "comment": "重置登录失败次数",
            "returnType": "void",
            "parameters": []
          }
        ]
      }
    ],
    "domainEvents": [
      {
        "name": "UserRegisteredEvent",
        "comment": "用户注册事件",
        "aggregateRootName": "User",
        "tableName": "user_registered_events",
        "fields": [
          {
            "name": "userId",
            "type": "String",
            "comment": "用户ID",
            "columnName": "user_id"
          },
          {
            "name": "username",
            "type": "String",
            "comment": "用户名",
            "columnName": "username"
          },
          {
            "name": "email",
            "type": "String",
            "comment": "邮箱",
            "columnName": "email"
          },
          {
            "name": "registeredAt",
            "type": "String",
            "comment": "注册时间",
            "columnName": "registered_at"
          }
        ]
      },
      {
        "name": "UserLoggedInEvent",
        "comment": "用户登录事件",
        "aggregateRootName": "User",
        "tableName": "user_logged_in_events",
        "fields": [
          {
            "name": "userId",
            "type": "String",
            "comment": "用户ID",
            "columnName": "user_id"
          },
          {
            "name": "loginTime",
            "type": "String",
            "comment": "登录时间",
            "columnName": "login_time"
          },
          {
            "name": "deviceType",
            "type": "String",
            "comment": "设备类型",
            "columnName": "device_type"
          }
        ]
      }
    ],
    "applicationServices": [
      {
        "name": "AuthApplicationService",
        "comment": "认证应用服务",
        "moduleName": "auth",
        "interfaceName": "AuthApplicationService",
        "implementationName": "AuthApplicationServiceImpl",
        "methods": [
          {
            "name": "registerUser",
            "comment": "用户注册",
            "returnType": "void",
            "parameters": [
              {
                "name": "username",
                "type": "String",
                "comment": "用户名"
              },
              {
                "name": "email",
                "type": "String",
                "comment": "邮箱"
              },
              {
                "name": "password",
                "type": "String",
                "comment": "密码"
              }
            ]
          },
          {
            "name": "login",
            "comment": "用户登录",
            "returnType": "String",
            // 返回访问令牌
            "parameters": [
              {
                "name": "username",
                "type": "String",
                "comment": "用户名"
              },
              {
                "name": "password",
                "type": "String",
                "comment": "密码"
              },
              {
                "name": "deviceType",
                "type": "String",
                "comment": "设备类型"
              },
              {
                "name": "ipAddress",
                "type": "String",
                "comment": "IP地址"
              }
            ]
          },
          {
            "name": "logout",
            "comment": "用户登出",
            "returnType": "void",
            "parameters": [
              {
                "name": "sessionToken",
                "type": "String",
                "comment": "会话令牌"
              }
            ]
          }
        ]
      }
    ]
  }
]
