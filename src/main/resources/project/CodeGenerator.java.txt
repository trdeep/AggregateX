
import cn.treedeep.king.generator.DDDModuleGenerator;
import cn.treedeep.king.generator.model.AggregateRoot;
import cn.treedeep.king.generator.model.Entity;
import cn.treedeep.king.generator.model.Module;
import cn.treedeep.king.generator.model.ValueObject;

import java.util.List;

/**
 * 测试值对象生成
 */
public class ValueObjectGeneratorTest {

    public static void main(String[] args) {
        // 工程信息
        String path = "/Users/zhougm/vscode/KingAdmin";
        String packageName = "cn.treedeep.king.admin";


        // 定义带有属性的值对象
        var phoneValueObject = ValueObject.create("Phone", "手机",
                Entity.property("phoneNumber", "手机号码"),
                Entity.property("countryCode", "国家代码"));

        // 定义带有属性的实体
        var loginRecordEntity = Entity.create("LoginRecord", "登录记录",
                Entity.property("loginTime", "登录时间"),
                Entity.property("ipAddress", "登录IP地址"),
                Entity.property("deviceInfo", "登录设备信息"),
                Entity.property("userId", "用户ID"));

        // 定义模块信息
        var modules = List.of(
                Module.create("authentication", "认证",
                        AggregateRoot.create("User", "用户聚合根",
                                Entity.create("Info", "信息实体",
                                        Entity.property("username", "用户名"),
                                        Entity.property("email", "邮箱")),
                                Entity.create("Role", "角色实体"),
                                phoneValueObject,
                                loginRecordEntity
                        )
                )
        );

        try {
            DDDModuleGenerator generator = new DDDModuleGenerator();

            // 批量生成
            generator.generateModules(path, packageName, modules, true);

            System.out.println("🎉 所有模块生成成功");

        } catch (Exception e) {
            System.err.println("❌ 模块生成失败: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
