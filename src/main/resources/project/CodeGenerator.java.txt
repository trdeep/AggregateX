package cn.treedeep.king;

import cn.treedeep.king.generator.config.DDDJsonConfigTool;
import cn.treedeep.king.shared.utils.ResourceUtil;
import lombok.extern.slf4j.Slf4j;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * AggregateX DDD 项目代码生成器
 */
@Slf4j
public class CodeGenerator {

    final static String PACKAGE_NAME = "cn.treedeep.king.admin";
    final static String PROJECT_PATH = "/Users/zhougm/vscode/KingAdmin";
    final static String BACKUP_DIR = PROJECT_PATH + "/src/main/resources/module_backups";

    public static void main(String[] args) {
        generateByJson();
    }

    private static void generateByJson() {
        DDDJsonConfigTool tool = new DDDJsonConfigTool();
        String jsonContent = ResourceUtil.readResource("module-info.json5");

        try {
            // 1. 执行代码生成
            tool.generateFromJsonString(jsonContent, PROJECT_PATH, PACKAGE_NAME);

            // 2. 备份配置文件
            backupJsonContent(jsonContent);

            log.info("✅ 模块代码已生成，配置文件已备份");
        } catch (Exception e) {
            log.error("❌ 代码生成失败", e);
        }
    }

    private static void backupJsonContent(String jsonContent) throws IOException {
        // 创建备份目录（如果不存在）
        Path backupPath = Paths.get(BACKUP_DIR);
        if (!Files.exists(backupPath)) {
            Files.createDirectories(backupPath);
        }

        // 生成带时间戳的备份文件名
        String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss"));
        String backupFileName = "module-info_" + timestamp + ".json5";

        // 构建目标路径
        Path targetPath = backupPath.resolve(backupFileName);

        // 直接写入JSON字符串内容
        Files.writeString(targetPath, jsonContent);

        log.debug("📁 配置内容已备份至: {}", targetPath);
    }

}
